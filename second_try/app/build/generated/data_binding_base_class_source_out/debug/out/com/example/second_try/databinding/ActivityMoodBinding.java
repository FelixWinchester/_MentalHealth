// Generated by view binder compiler. Do not edit!
package com.example.second_try.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.GridLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.second_try.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMoodBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnAngry;

  @NonNull
  public final Button btnExcited;

  @NonNull
  public final Button btnHappy;

  @NonNull
  public final Button btnRelaxed;

  @NonNull
  public final Button btnSad;

  @NonNull
  public final Button btnTired;

  @NonNull
  public final GridLayout moodGrid;

  @NonNull
  public final TextView moodTitle;

  private ActivityMoodBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnAngry,
      @NonNull Button btnExcited, @NonNull Button btnHappy, @NonNull Button btnRelaxed,
      @NonNull Button btnSad, @NonNull Button btnTired, @NonNull GridLayout moodGrid,
      @NonNull TextView moodTitle) {
    this.rootView = rootView;
    this.btnAngry = btnAngry;
    this.btnExcited = btnExcited;
    this.btnHappy = btnHappy;
    this.btnRelaxed = btnRelaxed;
    this.btnSad = btnSad;
    this.btnTired = btnTired;
    this.moodGrid = moodGrid;
    this.moodTitle = moodTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMoodBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMoodBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_mood, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMoodBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAngry;
      Button btnAngry = ViewBindings.findChildViewById(rootView, id);
      if (btnAngry == null) {
        break missingId;
      }

      id = R.id.btnExcited;
      Button btnExcited = ViewBindings.findChildViewById(rootView, id);
      if (btnExcited == null) {
        break missingId;
      }

      id = R.id.btnHappy;
      Button btnHappy = ViewBindings.findChildViewById(rootView, id);
      if (btnHappy == null) {
        break missingId;
      }

      id = R.id.btnRelaxed;
      Button btnRelaxed = ViewBindings.findChildViewById(rootView, id);
      if (btnRelaxed == null) {
        break missingId;
      }

      id = R.id.btnSad;
      Button btnSad = ViewBindings.findChildViewById(rootView, id);
      if (btnSad == null) {
        break missingId;
      }

      id = R.id.btnTired;
      Button btnTired = ViewBindings.findChildViewById(rootView, id);
      if (btnTired == null) {
        break missingId;
      }

      id = R.id.moodGrid;
      GridLayout moodGrid = ViewBindings.findChildViewById(rootView, id);
      if (moodGrid == null) {
        break missingId;
      }

      id = R.id.moodTitle;
      TextView moodTitle = ViewBindings.findChildViewById(rootView, id);
      if (moodTitle == null) {
        break missingId;
      }

      return new ActivityMoodBinding((ConstraintLayout) rootView, btnAngry, btnExcited, btnHappy,
          btnRelaxed, btnSad, btnTired, moodGrid, moodTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
